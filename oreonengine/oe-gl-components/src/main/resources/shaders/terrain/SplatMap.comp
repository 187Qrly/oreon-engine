#version 430 core

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, rgba16f) uniform writeonly image2D splatmap;
layout (binding = 1, rgba32f) uniform readonly image2D heightmap;
layout (binding = 2, rgba32f) uniform readonly image2D normalmap;

void main(void)
{
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	
	vec3 normal = normalize((imageLoad(normalmap, uv).rgb));
	vec4 v_heightmap= imageLoad(heightmap, uv).rgba;
	
	float red = smoothstep(0,1,-5*(v_heightmap.g-0.1));

	float green = 0;
	if (v_heightmap.g < 0.1)
		green = smoothstep(1,0,-5*(v_heightmap.g-0.1));
	else if (v_heightmap.g >= 0.1 && v_heightmap.g < 0.2)
		green = 1;
	else if (v_heightmap.g >= 0.2)
		green = smoothstep(0,1,-5*(v_heightmap.g-0.4));

	float blue = smoothstep(1,0,-5*(v_heightmap.g-0.4));

	float slopeFactor = 0;
	
	float scarpness = smoothstep(0,1,-32*(normal.z-1));
	
	blue = max(blue, scarpness);
	red -= red * blue;
	green -= green * blue;
	
	vec4 blendValues = vec4(0,0,0,0);
	
	blendValues.x = red;
	blendValues.y = green;
	blendValues.z = blue;
	blendValues.a = 1.0;
	
	imageStore(splatmap, uv, blendValues);
}